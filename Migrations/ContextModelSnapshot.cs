// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnet.Models;

namespace dotnet.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("dotnet.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("CNIC");

                    b.Property<int>("ConsultationFee");

                    b.Property<string>("Contact");

                    b.Property<string>("Email");

                    b.Property<int>("EmergencyConsultationFee");

                    b.Property<string>("EmergencyContact");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<int>("ShareInFee");

                    b.Property<int>("SpecialityType");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("doctors");
                });

            modelBuilder.Entity("dotnet.Models.Nurse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("CNIC");

                    b.Property<string>("Contact");

                    b.Property<string>("Email");

                    b.Property<string>("EmergencyContact");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("nurses");
                });

            modelBuilder.Entity("dotnet.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Contact");

                    b.Property<DateTime>("Dob");

                    b.Property<string>("Email");

                    b.Property<string>("FatherHusbandName");

                    b.Property<string>("LocalArea");

                    b.Property<string>("Name");

                    b.Property<string>("PatientDetails");

                    b.Property<string>("Sex");

                    b.HasKey("Id");

                    b.ToTable("patients");
                });

            modelBuilder.Entity("dotnet.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("dotnet.Models.Procedures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Charges");

                    b.Property<string>("Name");

                    b.Property<string>("PerformedBy");

                    b.Property<int>("PerformerShare");

                    b.HasKey("Id");

                    b.ToTable("procedures");
                });

            modelBuilder.Entity("dotnet.Models.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DoctorId");

                    b.Property<string>("Name");

                    b.Property<long>("PaidAmount");

                    b.Property<int>("PatientId");

                    b.Property<int?>("PaymentId");

                    b.Property<long>("PendingAmount");

                    b.Property<string>("Pmid");

                    b.Property<int>("ReceiptionistId");

                    b.Property<string>("Sex");

                    b.Property<long>("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("ReceiptionistId");

                    b.ToTable("receipts");
                });

            modelBuilder.Entity("dotnet.Models.Receiptionist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Contact");

                    b.Property<DateTime>("Dob");

                    b.Property<string>("Email");

                    b.Property<int>("FlourNo");

                    b.Property<string>("JobStatus");

                    b.Property<DateTime>("JoinDate");

                    b.Property<string>("Name");

                    b.Property<string>("Sex");

                    b.HasKey("Id");

                    b.ToTable("receiptionists");
                });

            modelBuilder.Entity("dotnet.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Availability");

                    b.Property<string>("FlourNo");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("rooms");
                });

            modelBuilder.Entity("dotnet.Models.Receipt", b =>
                {
                    b.HasOne("dotnet.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("dotnet.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("dotnet.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId");

                    b.HasOne("dotnet.Models.Receiptionist", "Receiptionist")
                        .WithMany()
                        .HasForeignKey("ReceiptionistId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
